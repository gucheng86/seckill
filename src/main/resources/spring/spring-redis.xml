<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

<!-- 扫描redis配置文件 -->
<!--    <context:property-placeholder location="classpath:redis.properties"/>-->
    <!-- 在spring容器中，加载多个配置文件时，需要这样写 -->
    <context:property-placeholder location="classpath:/jdbc.properties,classpath:/redis.properties" />

    <!-- 设置连接池-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMills}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
    </bean>

    <!-- 设置连接属性 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:hostName="${redis.host}"
          p:port="${redis.port}"
        p:poolConfig-ref="jedisPoolConfig"
          p:timeout="${redis.timeout}"
    />

    <!-- 在Configuration类中来配置RedisTemplate，目的是使用JSON序列化设置 -->
<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"-->
<!--          p:connectionFactory-ref="jedisConnectionFactory"-->
<!--          p:keySerializer-ref="keySerializer"-->
<!--          p:valueSerializer-ref="valueSerializer"-->
<!--          p:hashKeySerializer-ref="hashKeySerializer"-->
<!--          p:hashValueSerializer-ref="hashValueSerlizer"-->
<!--    />-->
    <!-- 对RedisTemplate的进一步封装-->
    <bean id="redisUtil" class="com.zxf.seckill.util.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <!-- 配置RedisCacheManager -->
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate"/>
        <property name="defaultExpiration" value="${redis.expiration}"/>
        <!-- 设置缓存区间 -->
        <property name="cacheNames">
            <list>
                <value>aboutSeckill</value>
            </list>
        </property>
    </bean>

    <!-- 获取config中的bean -->
    <context:component-scan base-package="com.zxf.seckill.config"/>
    <context:component-scan base-package="com.zxf.seckill.mq"/>

</beans>